{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/WordProcessing.js","components/LoggedInDashboard.js","components/Page2.js","components/App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_MESSAGE_SENDER_ID","appId","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","signOut","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","navigate","useNavigate","e","a","preventDefault","current","console","log","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","Login","WordProcessing","as","rows","LoggedInDashboard","onClick","Page2","App","Container","style","minHeight","maxWidth","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb9be5e0.chunk.js","sourcesContent":["/**\r\n * Manages the databse that we use to store our users\r\n * Exports auth, which is in charge of siging the user in and general authentication\r\n * \r\n * 1.0.0\r\n * 11/3/21\r\n */\r\n\r\n\r\nimport firebase from \"firebase/compat/app\"\r\nimport \"firebase/compat/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\nconst auth = app.auth()\r\n\r\nexport {\r\n    auth\r\n}","/**\r\n * A newer way to organize our authentication methods\r\n * This will create helper sign in and sign up functions so that we don't rewrite\r\n * the same code for trhe other pages\r\n * TODO: Create login helper function and signout helper function\r\n * \r\n * 1.0.0\r\n * 11/6/21\r\n */\r\nimport React, { useContext , useState, useEffect } from 'react'\r\nimport { auth } from '../firebase.js'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\n// Function that everything uses to reference this context\r\nexport function useAuth() { \r\n    return useContext(AuthContext)\r\n} \r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    // Calls the signup function on the database\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n    // Calls the login function on the database\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    // Signs out the current user\r\n    function signOut() {\r\n        if (currentUser) {\r\n            auth.signOut()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Updates the state of the current user (whether or not they are signed in)\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    // Functions and variables that other componenents will need access to\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        signOut\r\n    }\r\n\r\n    // Return the context, providing the values that everything should be able to use\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n           { !loading && children } \r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","/**\r\n * Manages the registration page for our app\r\n * Asks user for an email, password, and to verify password\r\n * Then, use firebase auth token to register new user\r\n * if user already exists then give error message\r\n * otherwise register user and go to loggedindashboard (User page)\r\n * \r\n * 1.0.0\r\n * 11/3/21\r\n */\r\n\r\n\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { useNavigate } from 'react-router'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    // Redirect to the loggedin dashboard page after the user signs up\r\n    useEffect(function() {\r\n        if (currentUser) {\r\n            navigate(\"/loggedindashboard\", [currentUser])\r\n        }\r\n    }, [currentUser, navigate])\r\n\r\n    // Called when submit button is clicked\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // Make sure that the user entered the same passwordf or both password and confirm password field\r\n        if (passwordRef.current.value !== \r\n            passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        // Try to create a new user on the database with given information\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n        } catch {\r\n            // If something goes wrong, show error message\r\n            console.log(error)\r\n            setError(\"Failed to create an account\")\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n    }\r\n\r\n    // Basic layout of the page in HTML\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                        Sign Up\r\n                    </Button>\r\n                </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Go back to <Link to=\"/\">dashboard</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","/**\r\n * The main page for our app\r\n * Has links to login page, sign up page, and word processing page\r\n * redirects user if the user is already loggedin\r\n * \r\n * 1.1.0\r\n * 11/3/21\r\n */\r\n\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router'\r\n\r\nexport default function Dashboard() {\r\n    const { currentUser } = useAuth()\r\n    const navigate = useNavigate()\r\n\r\n    // If logged in, then redirect to LoggedInDashboard\r\n    useEffect(function() {\r\n            if (currentUser) {\r\n                navigate(\"/loggedindashboard\", [currentUser])\r\n            }\r\n        }, [currentUser, navigate])\r\n\r\n\r\n    // Return the layout of the page\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            <Link to=\"/login\">Login</Link><br></br>\r\n            <Link to=\"/signup\">Sign Up</Link><br></br>\r\n            <Link to=\"/wordprocessing\">Word Processing Page</Link>\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n * Login page for our app\r\n * Shows an email and password box for the user to fill\r\n * Once filled, it verifies using the firebase auth\r\n * if successful, then go to loggedInDashboard (User page)\r\n * otherwise give an error message\r\n */\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { currentUser, login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    // Redirect to the loggedin dashboard after the user has successfully logged in\r\n    useEffect(function() {\r\n        if (currentUser) {\r\n            navigate(\"/loggedindashboard\", [currentUser])\r\n        }\r\n    }, [currentUser, navigate])\r\n    \r\n    // Called when login button is pressed\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        // Try to log in the user with given username and password\r\n        try {\r\n            setLoading(true)\r\n            setError(\"\")\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n        }\r\n        catch (e) {\r\n            // Show error message if something went wrong when trying to log in\r\n            console.log(e)\r\n            setError(\"Failed to login\")\r\n        }\r\n    }\r\n\r\n    // HTML layout of page\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                        Log In\r\n                    </Button>\r\n                </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Go back to <Link to=\"/\">dashboard</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","/**\r\n * The main sentiment analysis for our project\r\n * Gives user a text box to enter text into and then analyzes it\r\n * TODO: calculate analyze score\r\n * \r\n * 0.5.0\r\n * 11/3/21\r\n */\r\n\r\nimport Button from '@restart/ui/esm/Button'\r\nimport React from 'react'\r\nimport { Card, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function WordProcessing() {\r\n    \r\n    async function analyze(e) {\r\n        console.log(\"analyze!\")\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Form onSubmit={analyze}>\r\n                    <Form.Group id='text' className=\"w-300\">\r\n                        <Form.Label>Enter your text here</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={5}></Form.Control>\r\n                    </Form.Group>\r\n                    <div className=\"text-center mt-2\">\r\n                        <Button type=\"submit\">\r\n                            Analyze\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Card.Body>\r\n            \r\n            <div className=\"w-100 text-center mt-2\">\r\n                Go back to <Link to=\"/\">dashboard</Link>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n","/**\r\n * This is the page after a user logs in\r\n * Displays the email of the current user\r\n * TODO: Add product history\r\n * \r\n * 1.0.0\r\n * 11/3/21\r\n */\r\n\r\n\r\nimport React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\nexport default function LoggedInDashboard() {\r\n    const { currentUser, signOut } = useAuth()\r\n    const navigate = useNavigate()\r\n    \r\n    // If user is not logged in and we are on this page, then go back to the logged out dashboard\r\n    useEffect(function() {\r\n        if (!currentUser) {\r\n            navigate(\"/\", [currentUser])\r\n        }\r\n    }, [currentUser, navigate])\r\n\r\n    // Logs out the current user \r\n    async function logout() {\r\n        try {\r\n            await signOut()\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    // This page's layout\r\n    // For now, just displays user's email and then a logout button\r\n    return (\r\n        <div>\r\n            Logged in as\r\n            <div>{currentUser?.email}</div>\r\n            <button type=\"button\" onClick={logout}>Logout</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Page2() {\r\n    return (\r\n        <div>\r\n            <h2>Page2</h2>\r\n        </div>\r\n    )\r\n}\r\n","/**\r\n * Main setup for the react app\r\n * sets references to different pages so that we can use them throughout our project\r\n * \r\n * 1.0.0\r\n * 11/3/21\r\n */\r\n\r\nimport React from \"react\"\r\nimport Signup from \"./Signup\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport Login from \"./Login\"\r\nimport WordProcessing from \"./WordProcessing\"\r\nimport LoggedInDashboard from \"./LoggedInDashboard\"\r\nimport Page2 from \"./Page2\"\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from \"../contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <AuthProvider>\r\n            {/* These classes that are associated with each of the paths */}\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Dashboard/>} />\r\n              <Route path=\"/signup\" element={<Signup/>} />\r\n              <Route path=\"/login\" element={<Login/>} />\r\n              <Route path=\"/wordprocessing\" element={<WordProcessing/>} />\r\n              <Route path=\"/loggedindashboard\" element={<LoggedInDashboard/>} />\r\n              <Route path=\"/page2\" element={<Page2/>} />\r\n\r\n            </Routes>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}